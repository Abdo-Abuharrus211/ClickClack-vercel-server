{
  "swagger": "2.0",
  "info": {
    "title": "ClickClack API",
    "description": "API documentation for the ClickClack typing test app.",
    "version": "1.0.0"
  },
  "host": "localhost:3001",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "Root"
        ],
        "description": "Returns a welcome message for the ClickClack API server.",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string",
              "example": "This is the root of ClickClack's API server."
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/v1/auth/signup/": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Creates a new user account with email and password.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "result": { "type": "integer", "example": 0 },
                "data": { "type": "object", "example": {} },
                "message": { "type": "string", "example": "User created successfully" },
                "error": { "type": "string", "example": "" },
                "received": { "type": "string", "example": "Sign up credentials" }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/auth/login/": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Authenticates a user and starts a new session.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "result": { "type": "integer", "example": 0 },
                "data": {
                  "type": "object",
                  "properties": {
                    "isAdmin": { "type": "boolean", "example": false }
                  }
                },
                "message": { "type": "string", "example": "Login successful" },
                "error": { "type": "string", "example": "" },
                "received": { "type": "string", "example": "Login credentials" }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/auth/me/": {
      "get": {
        "tags": [
          "Auth"
        ],
        "description": "Checks if the user is currently authenticated by verifying the session token.",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "result": { "type": "integer", "example": 0 },
                "data": {
                  "type": "object",
                  "properties": {
                    "loggedin": { "type": "boolean", "example": true },
                    "userid": { "type": "string", "example": "12345" },
                    "isAdmin": { "type": "boolean", "example": false }
                  }
                },
                "message": { "type": "string", "example": "User is logged in" },
                "error": { "type": "string", "example": "" },
                "received": { "type": "string", "example": "" }
              }
            }
          },
          "401": {
            "description": "No session provided or user not logged in"
          },
          "403": {
            "description": "Invalid or expired token"
          }
        }
      }
    },
    "/api/v1/auth/logout/": {
      "get": {
        "tags": [
          "Auth"
        ],
        "description": "Logs the user out by clearing the session token stored in cookies.",
        "responses": {
          "200": {
            "description": "User logged out successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Cookie cleared successfully"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/get-previous-prompts/": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Retrieves a list of prompts previously generated by the logged-in user, including their ID, text, difficulty, and theme.",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "result": { "type": "integer", "example": 0 },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "promptid": { "type": "integer", "example": 1 },
                      "text": { "type": "string", "example": "The quick brown fox..." },
                      "difficulty": { "type": "string", "example": "medium" },
                      "theme": { "type": "string", "example": "nature" }
                    }
                  }
                },
                "message": { "type": "string", "example": "" },
                "error": { "type": "string", "example": "" },
                "received": { "type": "object", "example": {} }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/users/profile/": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Retrieves the logged-in user",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "result": { "type": "integer", "example": 0 },
                "data": {
                  "type": "object",
                  "properties": {
                    "displayName": { "type": "string", "example": "Caleb" },
                    "tokenCount": { "type": "integer", "example": 42 }
                  }
                },
                "message": { "type": "string", "example": "" },
                "error": { "type": "string", "example": "" },
                "received": { "type": "object", "example": {} }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/users/admin/": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Retrieves all user profiles including display names, remaining AI tokens, and roles. Accessible only to admin users.",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "result": { "type": "integer", "example": 0 },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "displayName": { "type": "string", "example": "Caleb" },
                      "tokenCount": { "type": "integer", "example": 50 },
                      "role": { "type": "string", "example": "admin" }
                    }
                  }
                },
                "message": { "type": "string", "example": "" },
                "error": { "type": "string", "example": "" },
                "received": { "type": "object", "example": {} }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/tests/save-test/": {
      "post": {
        "tags": [
          "Tests"
        ],
        "description": "Saves a completed typing test for the authenticated user, including WPM, AWPM, and accuracy calculations.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "keyStrokes": {
                  "example": "any"
                },
                "prompt": {
                  "example": "any"
                },
                "duration": {
                  "example": "any"
                },
                "promptid": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "result": { "type": "integer", "example": 0 },
                "data": {
                  "type": "object",
                  "properties": {
                    "accuracy": { "type": "number", "example": 92.5 },
                    "wpm": { "type": "number", "example": 68 },
                    "awpm": { "type": "number", "example": 64 }
                  }
                },
                "message": { "type": "string", "example": "" },
                "error": { "type": "string", "example": "" },
                "received": {
                  "type": "object",
                  "example": {
                    "keyStrokes": "The quick brown fox",
                    "prompt": "The quick brown fox jumps over the lazy dog.",
                    "duration": 45,
                    "promptid": 12
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/tests/get-tests/": {
      "get": {
        "tags": [
          "Tests"
        ],
        "description": "Retrieves all previously completed typing tests for the authenticated user.",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "result": { "type": "integer", "example": 0 },
                "data": {
                  "type": "object",
                  "properties": {
                    "tests": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "testid": { "type": "integer", "example": 1 },
                          "promptid": { "type": "integer", "example": 12 },
                          "wpm": { "type": "number", "example": 72 },
                          "awpm": { "type": "number", "example": 70 },
                          "accuracy": { "type": "number", "example": 95.3 },
                          "date": { "type": "string", "example": "2024-11-10" }
                        }
                      }
                    }
                  }
                },
                "message": { "type": "string", "example": "Tests retrieved successfully." },
                "error": { "type": "string", "example": "" },
                "received": { "type": "string", "example": "" }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/ai/generate-test-prompt/": {
      "post": {
        "tags": [
          "Tests"
        ],
        "description": "Generates a typing test prompt using a selected theme and difficulty level. The prompt is created by an AI model and saved to the database.",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "result": { "type": "integer", "example": 0 },
                "data": {
                  "type": "object",
                  "properties": {
                    "text": {
                      "type": "string",
                      "example": "The vast ocean stretched endlessly before her..."
                    },
                    "promptid": { "type": "integer", "example": 1 }
                  }
                },
                "message": { "type": "string", "example": "" },
                "error": { "type": "string", "example": "" },
                "received": {
                  "type": "object",
                  "properties": {
                    "theme": { "type": "string", "example": "the ocean" },
                    "difficulty": { "type": "string", "example": "medium" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  }
}